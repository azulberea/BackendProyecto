openapi: 3.0.1
info:
  title: Products API
  description: API documentation for product management.
  version: 1.0.0
servers:
  - url: https://localhost:8080/api/docs
paths:
  /api/products:
    get:
      summary: Get all products
      responses:
        "200":
          description: List of all products
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: objectId
                          description: Product ID
                        title:
                          type: string
                          description: Product name. Unique
                        description:
                          type: string
                          description: Product description
                        price:
                          type: number
                          description: Product price
                        stock:
                          type: number
                          description: Product stock
                        category:
                          type: string
                          description: Product category
                        status:
                          type: boolean
                          description: Product status (if the product is available or not)
                        owner:
                          type: string
                          description: Email of the user who's selling the product
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: string
                    description: Error message
    post:
      summary: Add a new product
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                stock:
                  type: number
                category:
                  type: string
                status:
                  type: boolean
                owner:
                  type: string
      responses:
        "201":
          description: Product added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: object
                    properties:
                      _id:
                        type: objectId
                        description: Product ID
                      title:
                        type: string
                        description: Product name. Unique
                      description:
                        type: string
                        description: Product description
                      price:
                        type: number
                        description: Product price
                      stock:
                        type: number
                        description: Product stock
                      category:
                        type: string
                        description: Product category
                      status:
                        type: boolean
                        description: Product status (if the product is available or not)
                      owner:
                        type: string
                        description: Email of the user who's selling the product
        "400":
          description: Error adding product due to missing properties
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: string
                    description: Error message

  api/products/product/{productid}:
    get:
      summary: Get a product by its ID
      parameters:
        - name: productid
          in: path
          required: true
          description: Product ID
      responses:
        "200":
          description: Product's properties
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: object
                    properties:
                      _id:
                        type: objectId
                        description: Product ID
                      title:
                        type: string
                        description: Product name. Unique
                      description:
                        type: string
                        description: Product description
                      price:
                        type: number
                        description: Product price
                      stock:
                        type: number
                        description: Product stock
                      category:
                        type: string
                        description: Product category
                      status:
                        type: boolean
                        description: Product status (if the product is available or not)
                      owner:
                        type: string
                        description: Email of the user who's selling the product
        "404":
          description: Product not found due to unexistent product ID (in parameters)
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: string
                    description: Error message

    put:
      summary: Update a product by its ID
      parameters:
        - name: productid
          in: path
          required: true
          description: Product ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                stock:
                  type: number
                category:
                  type: string
                status:
                  type: boolean
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: object
                    description: Updated product
        "400":
          description: Error updating product due to wrong productid param or trying to update an unexistient property
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: string
                    description: Error message
        

    delete:
      summary: Delete a product by its ID
      parameters:
        - name: productid
          in: path
          required: true
          description: Product ID
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  message:
                    type: string
                    description: Success message
        "400":
          description: Error updating product due to wrong productid param,
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: string
                    description: Error message

api/products/title/{title}:
    get:
      summary: Get a product by its title property
      parameters:
        - name: title
          in: path
          required: true
          description: Product title
      responses:
        "200":
          description: Product's properties
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: object
                    properties:
                      _id:
                        type: objectId
                        description: Product ID
                      title:
                        type: string
                        description: Product name. Unique
                      description:
                        type: string
                        description: Product description
                      price:
                        type: number
                        description: Product price
                      stock:
                        type: number
                        description: Product stock
                      category:
                        type: string
                        description: Product category
                      status:
                        type: boolean
                        description: Product status (if the product is available or not)
                      owner:
                        type: string
                        description: Email of the user who's selling the product
        "404":
          description: Product not found due to unexistent product title
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: string
                    description: Error message